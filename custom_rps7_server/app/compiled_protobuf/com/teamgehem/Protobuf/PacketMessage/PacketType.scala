// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package com.teamgehem.Protobuf.PacketMessage


import com.trueaccord.scalapb.Descriptors

sealed trait PacketType extends com.trueaccord.scalapb.GeneratedEnum {
  def isNone: Boolean = false
  def isRequestGetInfo: Boolean = false
  def isGoGameScene: Boolean = false
}

object PacketType extends com.trueaccord.scalapb.GeneratedEnumCompanion[PacketType] {
  case object NONE extends PacketType {
    val id = 0
    val name = "NONE"
    override def isNone: Boolean = true
  }
  
  case object REQUEST_GET_INFO extends PacketType {
    val id = 1
    val name = "REQUEST_GET_INFO"
    override def isRequestGetInfo: Boolean = true
  }
  
  case object GO_GAME_SCENE extends PacketType {
    val id = 2
    val name = "GO_GAME_SCENE"
    override def isGoGameScene: Boolean = true
  }
  
  lazy val values = Seq(NONE, REQUEST_GET_INFO, GO_GAME_SCENE)
  def fromValue(value: Int): PacketType = value match {
    case 0 => NONE
    case 1 => REQUEST_GET_INFO
    case 2 => GO_GAME_SCENE
  }
  lazy val descriptor = new Descriptors.EnumDescriptor(0, "PacketType", this)
}